#+TITLE: 线性回归

* 数据

数据来自于李宏毅 2020 Spring Machine Learning 作业 1，是 PM2.5 的预测，这里使用线性回归的方式对 PM2.5 进行预测。
预测时，将前 9 个小时所有的 feature 作为输入，将第 10 个小时的 PM2.5 作为 label 进行预测。

原始数据的格式，形如：
| DATE | ADDR | FEATURE | HOUR0 | HOUR1 | ... | HOUR23 |
|------+------+---------+-------+-------+-----+--------|
| ...  | ...  | ...     | ...   | ...   | ... | ...    |

* 目录结构

1. C++ 包括线性回归的 Cpp 代码
2. Python 包括线性回归的 Python 代码
3. Notes 包括需要的背景知识，这里主要是矩阵的微分
4. Data 训练和测试数据

* Python 说明

** ~data_processing.py~
1. 对原始数据导入进行初步处理
   - 对日期与小时进行合并处理
   - 对非数值类型数值进行处理
2. 对数据集进行分割，分为训练集和验证集
3. 数据类型转换，将数据转换为 [feature, label] 格式的数据格式，方便处理
4. 归一化：支持标准归一和最大最小值归一两种方式
** from_scratch
1. 该文件夹下所有代码均为从零实现线性回归的代码
2. ~linear_model.py~
   - 对二次凸优化问题，可以使用纯数值计算得到最优解，这里利用线性代数的伪逆矩阵求得对应的线性回归系数
   - 除了伪逆矩阵求解，还可以使用梯度下降算法对二次规划问题进行求解
   - 在原始梯度下降的基础上，针对学习率自适应可以实现 Adaptive Gradient Descent
   - 在原始梯度下降基础上，针对每个 epoch 都需要更新全部样本的 loss 导致计算量过大问题，可以引入 Stochastic
     Gradient Descent
** sklearn
1. ~demo.py~
   -
